import pygame
import random

# 游戏窗口大小
WINDOW_WIDTH = 800
WINDOW_HEIGHT = 600

# 贪吃蛇大小和速度
SNAKE_SIZE = 20
SNAKE_SPEED = 10

# 定义颜色
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# 初始化 Pygame
pygame.init()
window = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("贪吃蛇游戏")

clock = pygame.time.Clock()


def draw_snake(snake):
    for segment in snake:
        pygame.draw.rect(window, GREEN, (segment[0], segment[1], SNAKE_SIZE, SNAKE_SIZE))


def draw_food(food):
    pygame.draw.rect(window, RED, (food[0], food[1], SNAKE_SIZE, SNAKE_SIZE))


def run_game():
    snake = [[WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2]]
    direction = "right"

    food = [random.randrange(1, (WINDOW_WIDTH // SNAKE_SIZE)) * SNAKE_SIZE,
            random.randrange(1, (WINDOW_HEIGHT // SNAKE_SIZE)) * SNAKE_SIZE]

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT and direction != "right":
                    direction = "left"
                elif event.key == pygame.K_RIGHT and direction != "left":
                    direction = "right"
                elif event.key == pygame.K_UP and direction != "down":
                    direction = "up"
                elif event.key == pygame.K_DOWN and direction != "up":
                    direction = "down"

        if direction == "right":
            snake[0][0] += SNAKE_SIZE
        elif direction == "left":
            snake[0][0] -= SNAKE_SIZE
        elif direction == "up":
            snake[0][1] -= SNAKE_SIZE
        elif direction == "down":
            snake[0][1] += SNAKE_SIZE

        # 判断是否吃到食物
        if snake[0] == food:
            food = [random.randrange(1, (WINDOW_WIDTH // SNAKE_SIZE)) * SNAKE_SIZE,
                    random.randrange(1, (WINDOW_HEIGHT // SNAKE_SIZE)) * SNAKE_SIZE]
        else:
            snake.pop()

        # 判断是否撞墙或者自身
        if snake[0][0] < 0 or snake[0][0] >= WINDOW_WIDTH or snake[0][1] < 0 or snake[0][1] >= WINDOW_HEIGHT:
            pygame.quit()
            quit()

        for segment in snake[1:]:
            if segment == snake[0]:
                pygame.quit()
                quit()

        window.fill(BLACK)
        draw_snake(snake)
        draw_food(food)
        pygame.display.update()
        clock.tick(SNAKE_SPEED)


run_game()
